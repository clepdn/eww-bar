
;; workspaces widget
(deflisten workspaces :initial "[]" "bash ~/.config/eww/scripts/get-workspaces")
(deflisten current_workspace :initial "1" "bash ~/.config/eww/scripts/get-active-workspace")

(defwidget workspaces [mon]
  (eventbox :onscroll "bash ~/.config/eww/scripts/change-active-workspace {} ${current_workspace}" :class "workspaces-widget"
    (box :space-evenly true
      (label :text "${workspaces}${current_workspace}" :visible false)
      ;;(for workspace in "${jq(workspaces, "[.[] | select(.mon==\"DP-2\")")}]"
      (for workspace in "${jq(workspaces, "[ .[] | select(.mon == ${mon}) ]")}"
      	(eventbox :onclick "hyprctl dispatch workspace ${workspace.id}"
          ;;(box :class "workspace-entry ${workspace.windows > 0 ? "occupied" : "empty"}"
            (label :text "${workspace.id} ${workspace.class}" :class "workspace-entry ${workspace.id == current_workspace ? "current" : ""}" )
            ;;)
          )
        )
      )
    )
  )

;; regular bar

(defwindow primary
	   :monitor "DP-2"
           :geometry (geometry :x "0%"
                               :y "0px"
                               :width "100%"
                               :height "30px"
                               :anchor "top center")
	   :namespace "bar"
	   :exclusive true
           :stacking "bg"
           :reserve (struts :distance "40px" :side "top")
           :windowtype "dock"
           :wm-ignore false
	(box 
		:orientation "h"
		:space-evenly false 
		:spacing 15
		(workspaces
			:mon 0
		)
		(box
			:hexpand true
		)
		(box
			:orientation "h"
			:halign "end"
			:space-evenly false
			:spacing 10
			(systray
				:spacing 1
				:icon-size 20
			)
			(label :text "${formattime(EWW_TIME, "%-I:%M", "America/New_York")}")
			(label) ;; some padding
		)
	)
)
(defwindow secondary 
	   :monitor "DP-4"
           :geometry (geometry :x "0%"
                               :y "0px"
                               :width "100%"
                               :height "30px"
                               :anchor "top center")
	   :namespace "bar"
	   :exclusive true
           :stacking "bg"
           :reserve (struts :distance "40px" :side "top")
           :windowtype "dock"
           :wm-ignore false
	(box 
		:orientation "h"
		:space-evenly true 
		:spacing 15

		(label) ;; padding
		(workspaces
			:mon 1
		)
		;;(box
		;;	:hexpand true
		;;)
		(box
			:orientation "h"
			:halign "end"
			:space-evenly false
			:spacing 10
			(box
				:space-evenly false
			
			)
			(label :text "${formattime(EWW_TIME, "%-I:%M", "America/New_York")}")
			(label) ;; some padding
		)
	)
)

(defwindow laptop 
	   :monitor 0
           :geometry (geometry :x "0%"
                               :y "0px"
                               :width "100%"
                               :height "30px"
                               :anchor "top center")
	   :namespace "bar"
	   :exclusive true
           :stacking "bg"
           :reserve (struts :distance "40px" :side "top")
           :windowtype "dock"
           :wm-ignore false
	(box 
		:orientation "h"
		:space-evenly false 
		:spacing 15
		(workspaces
			:mon -1
		)
		(box
			:hexpand true
		)
		(box
			:orientation "h"
			:halign "end"
			:space-evenly false
			:spacing 10
			(box
				:space-evenly false
			
				(label :text "${jq(EWW_BATTERY, ".BAT0.capacity")}% ")
				(label :text "${jq(EWW_BATTERY, "if .BAT0.status != \"Discharging\" then .BAT0.status else empty end", "r")}")
			)
			(systray
				:spacing 1
				:icon-size 20
			)
			(label :text "${formattime(EWW_TIME, "%-I:%M", "America/New_York")}")
			(label) ;; some padding
		)
	)
)
